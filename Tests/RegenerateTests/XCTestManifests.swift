#if !canImport(ObjectiveC)
import XCTest

extension RGArraySpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGArraySpec = [
        ("Array__partial_regeneration", Array__partial_regeneration),
    ]
}

extension RGDictionarySpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGDictionarySpec = [
        ("Dictionary__partial_regeneration", Dictionary__partial_regeneration),
    ]
}

extension RGGenericSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGGenericSpec = [
        ("Generic_Data_Structure__should_regenerate_partially", Generic_Data_Structure__should_regenerate_partially),
    ]
}

extension RGRTSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RGRTSpec = [
        ("Regenerative_Radix_Merkle_Trie__targeting__result_should_just_have_one_key", Regenerative_Radix_Merkle_Trie__targeting__result_should_just_have_one_key),
        ("Regenerative_Radix_Merkle_Trie__masking__result_should_have_two_keys", Regenerative_Radix_Merkle_Trie__masking__result_should_have_two_keys),
        ("Regenerative_Radix_Merkle_Trie__Initialization__should_initialize_empty_rrm", Regenerative_Radix_Merkle_Trie__Initialization__should_initialize_empty_rrm),
        ("Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_set", Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_set),
        ("Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_get_the_same_value_back", Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_get_the_same_value_back),
        ("Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_delete", Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_delete),
        ("Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_know_key", Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_know_key),
        ("Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_not_have_value_for_key", Regenerative_Radix_Merkle_Trie__Initialization__setting__getting_and_deleting__should_not_have_value_for_key),
        ("Regenerative_Radix_Merkle_Trie__Initialization__digest_equivalency__should_have_unique_keys", Regenerative_Radix_Merkle_Trie__Initialization__digest_equivalency__should_have_unique_keys),
        ("Regenerative_Radix_Merkle_Trie__Initialization__digest_equivalency__should_have_the_same_digest_for_both_rrm__since_contents_are_the_same", Regenerative_Radix_Merkle_Trie__Initialization__digest_equivalency__should_have_the_same_digest_for_both_rrm__since_contents_are_the_same),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__because_key_exists__it_should_create_transition_proof_of_deletion", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__because_key_exists__it_should_create_transition_proof_of_deletion),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__should_successfully_modify_partial_rrm_as_it_has_all_required_info", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__should_successfully_modify_partial_rrm_as_it_has_all_required_info),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__should_have_the_same_digest_for_both_rrm_s", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__should_have_the_same_digest_for_both_rrm_s),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_be_different_from_other_keys", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_be_different_from_other_keys),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__because_key_does_not_exist__it_should_create_transition_proof_of_creation", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__because_key_does_not_exist__it_should_create_transition_proof_of_creation),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_successfully_modify_merged_partial_rrm_as_it_has_all_required_info", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_successfully_modify_merged_partial_rrm_as_it_has_all_required_info),
        ("Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_have_the_same_digest_for_both_rrm_s", Regenerative_Radix_Merkle_Trie__Initialization__transition_proofs__merging_proofs__should_have_the_same_digest_for_both_rrm_s),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__is_complete", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__is_complete),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__can_extract_node_contents_from_complete", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__can_extract_node_contents_from_complete),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__should_have_same_digest_as_original", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__should_have_same_digest_as_original),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__should_have_no_contents", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__should_have_no_contents),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_be_complete", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_be_complete),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_output_correct_keys", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_output_correct_keys),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_output_correct_values", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__rrm_with_just_root__inserting_back_contents__should_output_correct_values),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_be_the_wrong_digest", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_be_the_wrong_digest),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_accept_insertion", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_accept_insertion),
        ("Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_reject_insertion", Regenerative_Radix_Merkle_Trie__Initialization__Regeneration__malicious_insertion__should_reject_insertion),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(RGArraySpec.__allTests__RGArraySpec),
        testCase(RGDictionarySpec.__allTests__RGDictionarySpec),
        testCase(RGGenericSpec.__allTests__RGGenericSpec),
        testCase(RGRTSpec.__allTests__RGRTSpec),
    ]
}
#endif
